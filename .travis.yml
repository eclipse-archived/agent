# language: c
# sudo: required
# before_install:
#  - sudo apt update -qq
#  - sudo apt install libev-dev libssl-dev m4 pkg-config rsync unzip -y
#  - wget https://raw.githubusercontent.com/ocaml/ocaml-ci-scripts/master/.travis-opam.sh
# install: bash -ex .travis-opam.sh
# env:
#     global:
#     - INTRAVIS="true"
# #    - DEPOPTS="atdgen ocp-ocamlres conf-libev"
#     - PINS="fos-agent:. apero-core:https://github.com/atolab/apero-core.git#0.4.6 dynload-sys:https://github.com/atolab/apero-core.git#0.4.6 apero-net:https://github.com/atolab/apero-net.git#0.4.6 apero-time:https://github.com/atolab/apero-time.git#0.4.6 zenoh-proto:https://github.com/atolab/zenoh.git#0.3.0 zenoh-ocaml:https://github.com/atolab/zenoh.git#0.3.0 yaks-common:https://github.com/atolab/yaks-common.git#0.3.0 yaks-ocaml:https://github.com/atolab/yaks-ocaml.git#0.3.0 fos-sdk:https://github.com/eclipse-fog05/sdk-ocaml.git fos-fim-api:https://github.com/eclipse-fog05/api-ocaml.git"
#     - PACKAGE=fos-agent
#     matrix:
#     - OCAML_VERSION=4.09

os: linux
language: cpp
services:
  - docker
before_install:
  - docker pull debian:10-slim
  - docker run -it -d --name build debian:10-slim bash
  - docker exec build apt update
  # install deps
  - docker exec build apt install build-essential devscripts lintian dh-make git wget jq libev-dev libssl-dev python3 python3-dev python3-pip m4 pkg-config rsync unzip cmake sudo -y
  - docker exec build pip3 install pyangbind
  # install opam
  - docker exec build wget -O opam https://github.com/ocaml/opam/releases/download/2.0.6/opam-2.0.6-x86_64-linux
  - docker exec build install ./opam /usr/local/bin/opam
  - docker exec build opam init --disable-sandboxing
  # copying repo inside container
  - docker cp ../agent build:/root/
script:
  - docker exec build bash -c "eval \$(opam env) && opam install dune.1.11.4 atdgen.2.0.0 conf-libev ocp-ocamlres -y"
  - docker exec build bash -c "eval \$(opam env) && cd /root/ && git clone https://github.com/atolab/apero-core.git -b 0.4.6 --depth 1 && cd apero-core && opam install . --working-dir -y"
  - docker exec build bash -c "eval \$(opam env) && cd /root/ && git clone https://github.com/atolab/apero-net.git -b 0.4.6 --depth 1 && cd apero-net && opam install . --working-dir -y"
  - docker exec build bash -c "eval \$(opam env) && cd /root/ && git clone https://github.com/atolab/apero-time.git -b 0.4.6 --depth 1 && cd apero-time && opam install . --working-dir -y"
  - docker exec build bash -c "eval \$(opam env) && cd /root/ && git clone https://github.com/atolab/zenoh.git -b 0.3.0 --depth 1 && cd zenoh && opam install . --working-dir -y"
  - docker exec build bash -c "eval \$(opam env) && cd /root/ && git clone https://github.com/atolab/yaks-common.git -b 0.3.0 --depth 1 && cd yaks-common && opam install . --working-dir -y"
  - docker exec build bash -c "eval \$(opam env) && cd /root/ && git clone https://github.com/atolab/yaks-ocaml.git -b 0.3.0 --depth 1 && cd yaks-ocaml && opam install . --working-dir -y"
  - docker exec build bash -c "eval \$(opam env) && cd /root/ && git clone https://github.com/eclipse-fog05/sdk-ocaml.git && cd sdk-ocaml && make install"
  - docker exec build bash -c "eval \$(opam env) && cd /root/ && git clone https://github.com/eclipse-fog05/api-ocaml.git && cd api-ocaml && make install"
  - docker exec build bash -c "eval \$(opam env) && cd /root/agent && make"
    # building a debian package
  - docker exec build bash -c "mkdir /root/build && cd /root && cp agent build/fog05-0.1 && cd build/agent && rm -rf .git && make clean && cd .. && tar -czvf fog05-0.1.tar.gz fog05-0.1"
  - docker exec build bash -c "eval \$(opam env) && cd /root/build/fog05-0.1 && make clean"
  - docker exec build bash -c "eval \$(opam env) && export DEBEMAIL=\"info@adlink-labs.tech\" && export DEBFULLNAME=\"ATO Labs\" && cd /root/build/fog05-0.1 && dh_make -f ../fog05-0.1.tar.gz -s -y"
  - docker exec build bash -c 'cd /root/build/fog05-0.1 && printf "override_dh_auto_install:\n\tinstall -D -m 0755 _build/default/fos-agent/fos_agent.exe $(pwd)/debian/fog05/etc/fos/agent\n\tinstall -D etc/fos_agent.service $(pwd)/debian/fog05/lib/systemd/system/\n\tinstall -D etc/fos_agent.target $(pwd)/debian/fog05/lib/systemd/system/\n\tinstall -D etc/agent.json $(pwd)/debian/fog05/etc/fos/agent.json\n" >> debian/rules'
  - docker exec build bash -c "eval \$(opam env) && cd /root/build/fog05-0.1 && debuild --preserve-envvar PATH -us -uc  && ls -l"
  - docker exec build bash -c "cd /root/build/ && dpkg -I fog05_0.1-1_amd64.deb"